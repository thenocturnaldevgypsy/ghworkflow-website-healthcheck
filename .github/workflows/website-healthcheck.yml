name: Website Health Check

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:

jobs:
  healthcheck:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Grants write permission to update the README.md

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Website Health Check
        id: check_status
        run: |
          # Define the websites to check
          websites=(
            "https://thenocturnaldevgypsy.vercel.app"
            "https://beacons.ai/thenocturnaldevgypsy"
          )
          
          # Get the current timestamp in UTC
          current_time=$(date -u "+%Y-%m-%d %H:%M:%S UTC")
          
          # Initialize the status table content
          status_table="Website Status Check\nTimestamp: $current_time\n\n| Domain/Website | Status |\n|---|---|"
          
          # Loop through each website and check its status
          for website in "${websites[@]}"; do
            status_code=$(curl --write-out "%{http_code}" --silent --output /dev/null "$website")
            if [ "$status_code" -eq 200 ]; then
              status="✅ UP"
            else
              status="❌ DOWN - Error Code: $status_code"
            fi
            status_table+="\n| $website | $status |"
          done
          
          # Escape slashes and ampersands for use in sed
          status_table_escaped=$(echo "$status_table" | sed 's/[\/&]/\\&/g')
          
          # Update the README.md file in place
          sed -i "/<!-- status_table_start -->/,/<!-- status_table_end -->/c\<!-- status_table_start -->\n$status_table_escaped\n<!-- status_table_end -->" README.md

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update website health status"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
